{% extends 'index.html.twig' %}
{% import 'helpers/preloader.twig' as preloader %}

{% block title %}Konsola{% endblock %}

{% block main_content %}
    <div class="console-container">
        <form name="filter" id="filter_form">
            <div class="filter-container row" id="form-container">
                <div class="col-sm-3 col-xs-4">
                    <div class="row">
                        <div class="form-check">
                            <input type="radio" id="command_filter_all_0" name="command_filter[all]" required="required" class="form-check-input" value="1" checked="checked">
                            <label class="form-check-label required" for="command_filter_all_0">Wszystkie</label>
                        </div>
                    </div>
                </div>
                <div class="col-sm-9 col-xs-6">
                    <div class="row">
                        <div class="form-check">
                            <input type="radio" id="command_filter_all_1" name="command_filter[all]" required="required" class="form-check-input" value="0">
                            <label class="form-check-label required" for="command_filter_all_1">Wybrane</label>
                        </div>
                    </div>
                    <div class="row filter-options-container">
                        <div class="filter-options">
                            <div class="form-check">
                                <input disabled="disabled" type="checkbox" id="command_filter_asyncChatThread" name="command_filter[asyncChatThread]" class="form-check-input" value="1">
                                <label class="form-check-label" for="command_filter_asyncChatThread">Async chat thread</label>
                            </div>
                        </div>
                        <div class="filter-options">
                            <div class="form-check">
                                <input disabled="disabled" type="checkbox" id="command_filter_serverThread" name="command_filter[serverThread]" class="form-check-input" value="1">
                                <label class="form-check-label" for="command_filter_serverThread">Server thread</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="filter-toggle" id="filter-toggle">
                FILTER
            </div>
        </form>
        <div class="log">
{#            <img id="command_loader" src="/images/command-loader.gif">#}
            <pre id="console">{{ preloader.preloaderInline() }}</pre>
            <div class="console-control">
                <img id="input_loader" src="/images/input-loader.gif">
                <label class="btn" id="comment_switch">
                    <i class="fa fa-commenting" aria-hidden="true"></i>
                    <input style="display: none" type="checkbox">
                </label>
                <input
                        class="form-control"
                        placeholder="wpisz komendę.."
                        name="command[command]"
                        required="required"
                        id="command" />
                <label>
                    <button
                        class="btn btn-primary"
                        title="send.."
                        id="send_command"><i class="fa fa-paper-plane" aria-hidden="true"></i></button>
                </label>
            </div>

        </div>
    </div>
{% endblock %}
{% block javascripts %}
    <script>

        let loadConsoleUrl = "{{ path('current_log')|escape('js') }}";
        let sendCommandUrl = "{{ path('send_command')|escape('js') }}";
        let availableCommands = {{ availableCommands | raw }};

        let blockForm = false;

        $(document).ready(function () {
            $('#form-container').toggle();
            load();
            setInterval(function(){
                if (blockForm) return;
                load();
            }, 3000);
            commandInputMode();
        });

        $('#command').autocomplete({
            source: availableCommands,
            position: { my : "right bottom", at: "right top", collision: "none" }
        }).autocomplete( "instance" )._renderItem = function( ul, item ) {
            return $( "<li>" )
                .append( "<div><span class='ui-autocomplete-label'>" + item.label + '</span><span class="mobile-hide"> - </span><span class="ui-autocomplete-desc mobile-hide">' + item.desc + "</span></div>" )
                .appendTo( ul );
        };

        $('#command').keypress(function (e) {
            if (e.which == 13) {
                send ();
            }
        });

        $('#command').focusin(function () {
            if (!isDialogMode()) return;
            if($(this).val()=='') {
                $(this).val('say ');
            }
        });
        $('#command').focusout(function () {
            if (!isDialogMode()) return;
            if($(this).val()=='say ') {
                $(this).val('');
            }
        });

        $('#send_command').click(function () {
            send ();
        });

        $('#comment_switch').click(function () {
            commandInputMode();
        });

        $('#filter-toggle').click(function () {
            $('#form-container').toggle();
        })

        function commandInputMode () {
            if (isDialogMode()) {
                $('#command').prop('placeholder', 'powiedz coś do innych..');
                $('#comment_switch').addClass('btn-success');
            } else {
                $('#command').prop('placeholder', 'wpisz komendę..');
                $('#comment_switch').removeClass('btn-success');
            }
        }

        function isDialogMode () {
            return $('#comment_switch input[type="checkbox"]').is(':checked');
        }

        function load () {

            let token = "{{ csrf_token('command_filter_token') }}";
            let serializedData = $( '#filter_form' ).serialize();
            serializedData+= '&command_filter[_token]=' + token;

            let shouldScroll = isConsoleOnBottom ('#console');
            $.get( loadConsoleUrl, serializedData, function( data ) {
                if (data.data) {
                    $("#console").html(data.data);
                    $('#input_loader').hide();
                } else {
                    document.location.reload();
                }
                if (shouldScroll) {
                    consoleGoToBottom('#console');
                }
            });
        }

        function send () {
            if (blockForm) return;
            blockForm = true;
            $('#input_loader').show();
            $('#command').autocomplete("close");
            let data = $('#command').val();
            let token = "{{ csrf_token('command_token') }}";

            $.post( sendCommandUrl, {command: {command:data, _token: token}})
                .done(function(){
                    load();
                    $('#command').val("");
                    if (isDialogMode()) {
                        $('#command').val('say ');
                    }
                    blockForm = false;
                })
                .fail(function(response){
                    $('#input_loader').hide();
                    alert("Nieoczekiwany błąd");
                    blockForm = false;
                });
        }

        function isConsoleOnBottom (selector) {
            let messageBody = document.querySelector(selector);
            let scrollTop = messageBody.scrollHeight - messageBody.clientHeight;
            if (messageBody.scrollTop==0) {
                return true;
            }
            return scrollTop-messageBody.scrollTop==0;
        }

        function consoleGoToBottom (selector) {
            let messageBody = document.querySelector(selector);
            messageBody.scrollTop = messageBody.scrollHeight - messageBody.clientHeight;
        }

        $('.filter-container input').change(function () {
            lockUnlockCheckbox();

        });

        function lockUnlockCheckbox () {
            if ($('#command_filter_all_1').is(':checked')) {
                $('.filter-options input').removeAttr('disabled');
            } else {
                $('.filter-options input').attr("disabled", true);
                $('.filter-options input').prop("checked", false);
            }
        }

    </script>
{% endblock %}
{% block stylesheets %}
    <style>
        body {
            overflow-y: hidden; /* Hide vertical scrollbar */
            overflow-x: hidden; /* Hide horizontal scrollbar */
        }
    </style>
{% endblock %}